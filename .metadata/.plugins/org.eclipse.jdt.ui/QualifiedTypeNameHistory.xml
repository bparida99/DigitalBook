<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="javax.annotation.security.RolesAllowed"/>
    <fullyQualifiedTypeName name="com.cts.reader.config.ReaderDetailsService"/>
    <fullyQualifiedTypeName name="com.cts.reader.config.jwt.JwtFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.BeanIds"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.http.SessionCreationPolicy"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="com.cts.reader.config.jwt.JwtUtil"/>
    <fullyQualifiedTypeName name="com.cts.reader.config.jwt.AuthRequest"/>
    <fullyQualifiedTypeName name="java.lang.Override"/>
    <fullyQualifiedTypeName name="com.cts.reader.bo.ReaderBo"/>
    <fullyQualifiedTypeName name="com.cts.reader.repo.ReaderDAO"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.mock.mockito.MockBean"/>
    <fullyQualifiedTypeName name="com.cts.reader.entity.Reader"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.lang.Assert"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="org.springframework.util.Assert"/>
    <fullyQualifiedTypeName name="com.cts.author.dao.AuthorDAO"/>
    <fullyQualifiedTypeName name="com.cts.purchase.dao.PurchaseDao"/>
    <fullyQualifiedTypeName name="com.cts.purchase.bo.PurchaseBo"/>
    <fullyQualifiedTypeName name="com.cts.purchase.entity.DigitalBooksConstants"/>
    <fullyQualifiedTypeName name="com.cts.purchase.exception.DigitalBooksException"/>
    <fullyQualifiedTypeName name="com.cts.reader.exception.DigitalBooksException"/>
    <fullyQualifiedTypeName name="org.hibernate.exception.ConstraintViolationException"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="io.swagger.models.HttpMethod"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
    <fullyQualifiedTypeName name="com.cts.author.dto.Book"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpHeaders"/>
    <fullyQualifiedTypeName name="org.springframework.http.MediaType"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpEntity"/>
    <fullyQualifiedTypeName name="com.cts.author.service.BookRestService"/>
    <fullyQualifiedTypeName name="com.cts.author.entity.Author"/>
    <fullyQualifiedTypeName name="org.springframework.boot.web.client.RestTemplateBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PutMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="com.cts.purchase.entity.Purchase"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="com.cts.ns.dao.NotificationDAO"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.KafkaListener"/>
    <fullyQualifiedTypeName name="com.cts.ns.entity.Notification"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.apache.kafka.common.serialization.LongDeserializer"/>
    <fullyQualifiedTypeName name="org.apache.kafka.common.serialization.LongSerializer"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
</qualifiedTypeNameHistroy>
