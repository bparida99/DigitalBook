package com.cts.dbs.api;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.cts.dbs.bo.AuthorBo;
import com.cts.dbs.bo.BookBo;
import com.cts.dbs.entity.Author;
import com.cts.dbs.entity.Book;
import com.cts.dbs.exception.DigitalBooksException;

@RestController
@RequestMapping("/author")
public class AuthorController {

	@Autowired
	private AuthorBo authorBo;
	
	@Autowired
	private BookBo bookBo;
	
	Logger logger = LoggerFactory.getLogger(AuthorController.class);
	
	@PostMapping("/registration")
	public ResponseEntity<Author> createAuthor(@RequestBody Author author) {
		ResponseEntity<Author> rAuthor1;
		Author author1 = authorBo.createAuthor(author);
		rAuthor1 = new ResponseEntity<>(author1,HttpStatus.OK);
		return rAuthor1;
	}
	
	@PutMapping("/updateDetails")
	public ResponseEntity<Author> updateAuthor(@RequestBody Author author){
		ResponseEntity<Author> rAuthor1;
		try {
		Author author1= authorBo.updateAuthor(author);
		rAuthor1 = new ResponseEntity<>(author1,HttpStatus.OK);
		}catch(DigitalBooksException e) {
			logger.error("Failed to update author details: "+e);
			rAuthor1= new ResponseEntity<>(HttpStatus.BAD_REQUEST);
		}
		
		return rAuthor1;
	}
	
	@GetMapping("findBookByAuthor/{id}")
	public ResponseEntity<List<Book>> findBookByAuthor(Long id){
		ResponseEntity<List<Book>> reBook;
		try {
			Author author = authorBo.getAuthorById(id);
			List<Book> bookList = bookBo.findBookByAuthor(author);
			reBook = new ResponseEntity<List<Book>>(bookList,HttpStatus.OK);
		}catch(DigitalBooksException e) {
			reBook = new ResponseEntity<List<Book>>(HttpStatus.BAD_REQUEST);
		}
		return reBook;
	}
	
	
}
