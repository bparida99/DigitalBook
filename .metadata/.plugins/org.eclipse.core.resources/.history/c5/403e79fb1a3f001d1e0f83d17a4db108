package com.cts.reader.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.WebSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.crypto.password.NoOpPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;

import com.cts.reader.config.jwt.JwtFilter;

@EnableWebSecurity
public class CostumizeSecurity extends WebSecurityConfigurerAdapter{
	
	@Autowired
	private ReaderDetailsService reader;
	
	@Autowired
    private JwtFilter jwtFilter;

	@Override
	public void configure(WebSecurity web) throws Exception {
	    web.ignoring().antMatchers("/api/v1/digitalbooks/readers/addReader");

	}

	
	
	@Override
	protected void configure(AuthenticationManagerBuilder auth) throws Exception{
		//auth.inMemoryAuthentication().withUser("Biswojit").password("abcd").roles("ADMIN");
		auth.userDetailsService(reader);
		
	}
	
	@Bean
	public PasswordEncoder getpassPasswordEncoder() {
		return NoOpPasswordEncoder.getInstance();
	}

}
