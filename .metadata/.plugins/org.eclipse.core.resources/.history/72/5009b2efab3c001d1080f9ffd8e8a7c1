package com.cts.dbs.api;

import java.sql.Date;
import java.time.LocalDate;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.cts.dbs.DigitalBooksConstants;
import com.cts.dbs.bo.BooksOfUserBo;
import com.cts.dbs.entity.BooksofUser;

@RestController
@RequestMapping("/purchase")
public class BooksOfUserController {

	Logger logger = LoggerFactory.getLogger(BooksOfUserController.class);

	@Autowired
	private BooksOfUserBo booksOfUserBo;
	
	@PostMapping("/addPurchase")
	public ResponseEntity<BooksofUser> addPurchase(@RequestBody BooksofUser bu){
		bu.setExpiryDate(DigitalBooksConstants.defaultDate);
		bu.setPurchseDate(Date.valueOf(LocalDate.now()));
		bu = booksOfUserBo.addPurchase(bu);
		return new ResponseEntity<BooksofUser>(bu, HttpStatus.OK);
	}
	
	@GetMapping("/getPurchaseByReaderId/{id}")
	public ResponseEntity<List<BooksofUser>> getPurchseByUserId(Long id){
		ResponseEntity<List<BooksofUser>> reBu;
		List<BooksofUser> buList = booksOfUserBo.findPurchaseByUserId(id);
		reBu = new ResponseEntity<List<BooksofUser>>(buList,HttpStatus.OK);
		return reBu;
	}
}
